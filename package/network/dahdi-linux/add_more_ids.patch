--- dahdi-linux-2.2.1/drivers/dahdi/wcb4xxp/wcb4xxp.h.orig	2010-02-17 21:13:37.000000000 +0100
+++ dahdi-linux-2.2.1/drivers/dahdi/wcb4xxp/wcb4xxp.h	2010-02-17 21:20:25.000000000 +0100
@@ -425,7 +425,11 @@
 	OCTOBRI,	/* HFC-8S Junghanns.NET octoBRI PCI	*/
 	BN2S0,		/* BeroNet BN2S0			*/
 	BN4S0,		/* Beronet BN4S0			*/
-	BN8S0		/* BeroNet BN8S0			*/
+	BN8S0,		/* BeroNet BN8S0			*/
+	GENERIC1,/* stuff that hasn't really been confirmed, tested, etc... */
+	GENERIC2,
+	GENERIC4,
+	GENERIC8
 	};
 
 /* This structure exists one per card */
--- dahdi-linux-2.2.1/drivers/dahdi/wcb4xxp/base.c.orig	2010-02-17 20:39:42.000000000 +0100
+++ dahdi-linux-2.2.1/drivers/dahdi/wcb4xxp/base.c	2010-02-17 21:20:22.000000000 +0100
@@ -137,6 +137,22 @@
 static struct devtype hfc2s_BN = {"BeroNet BN2S0", .ports = 2, .card_type = BN2S0 };
 static struct devtype hfc4s_BN = {"BeroNet BN4S0", .ports = 4, .card_type = BN4S0 };
 static struct devtype hfc8s_BN = {"BeroNet BN8S0", .ports = 8, .card_type = BN8S0 };
+static struct devtype BERONET_BN1S0_MINI =  {"BeroNet BN1S0 miniPCI", .ports = 1, .card_type = GENERIC1 };
+static struct devtype BERONET_BN2S0_MINI =  {"BeroNet BN2S0 miniPCI", .ports = 2, .card_type = GENERIC2 };
+static struct devtype BERONET_BN2S0_PCIE =  {"BeroNet BN2S0 PCIe", .ports = 2, .card_type = GENERIC2 };
+static struct devtype BERONET_BN4S0_MINI =  {"BeroNet BN4S0 miniPCI", .ports = 4, .card_type = GENERIC4 };
+static struct devtype BERONET_BN4S0_PCIE =  {"BeroNet BN4S0 PCIe", .ports = 4, .card_type = GENERIC4 };
+static struct devtype BERONET_BN8S0_PLUS =  {"BeroNet BN8S0+", .ports = 8, .card_type = GENERIC8 };
+static struct devtype JUNGHANNS_DUO_MINI =  {"Junghanns.NET duoBRI miniPCI", .ports = 2, .card_type = GENERIC2 };
+static struct devtype JUNGHANNS_QUAD_MINI = {"Junghanns.NET quadBRI miniPCI", .ports = 4, .card_type = GENERIC4 };
+static struct devtype JUNGHANNS_QUAD_PCI2 = {"Junghanns.NET quadBRI 2.0 PCI", .ports = 4, .card_type = GENERIC4 };
+static struct devtype JUNGHANNS_OCTO_PCI =  {"Junghanns.NET octoBRI PCI", .ports = 8, .card_type = GENERIC8 };
+static struct devtype SWYX_QUAD =           {"Swyx 4xS0 SX2 QuadBRI", .ports = 4, .card_type = GENERIC4 };
+static struct devtype GENERIC_HFC4S_1 =     {"HFC-4S", .ports = 4, .card_type = GENERIC4 };
+static struct devtype GENERIC_HFC8S_1 =     {"HFC-8S IOB4ST Recording", .ports = 8, .card_type = GENERIC8 };
+static struct devtype GENERIC_HFC8S_2 =     {"HFC-8S IOB8ST", .ports = 8, .card_type = GENERIC8 };
+static struct devtype GENERIC_HFC8S_3 =     {"HFC-8S", .ports = 8, .card_type = GENERIC8 };
+static struct devtype GENERIC_HFC8S_4 =     {"HFC-8S", .ports = 8, .card_type = GENERIC8 };
  
 #define CARD_HAS_EC(card) ((card)->card_type == B410P)
 
@@ -426,6 +442,7 @@
 	mb();
 
 	switch (b4->card_type) {
+	case GENERIC8:
 	case OCTOBRI:  /* fall through */
 	case B800P_OV: /* fall through */
 	case BN8S0:
@@ -2892,6 +2909,22 @@
 	{ 0x1397, 0x08b4, 0x1397, 0xb566, 0, 0, (unsigned long)&hfc2s_BN },
 	{ 0x1397, 0x08b4, 0x1397, 0xb560, 0, 0, (unsigned long)&hfc4s_BN },
 	{ 0x1397, 0x16b8, 0x1397, 0xb562, 0, 0, (unsigned long)&hfc8s_BN },
+	{ 0x1397, 0x08b4, 0x1397, 0xb567, 0, 0, (unsigned long)&BERONET_BN1S0_MINI },   /* BeroNet BN1S0 miniPCI */
+	{ 0x1397, 0x08b4, 0x1397, 0xb569, 0, 0, (unsigned long)&BERONET_BN2S0_MINI },   /* BeroNet BN2S0 miniPCI */
+	{ 0x1397, 0x08b4, 0x1397, 0xb761, 0, 0, (unsigned long)&BERONET_BN2S0_PCIE },   /* BeroNet BN2S0 PCIe */
+	{ 0x1397, 0x08b4, 0x1397, 0xb568, 0, 0, (unsigned long)&BERONET_BN4S0_MINI },   /* BeroNet BN4S0 miniPCI */
+	{ 0x1397, 0x08b4, 0x1397, 0xb762, 0, 0, (unsigned long)&BERONET_BN4S0_PCIE },   /* BeroNet BN4S0 PCIe */
+	{ 0x1397, 0x16b8, 0x1397, 0xb56b, 0, 0, (unsigned long)&BERONET_BN8S0_PLUS },   /* BeroNet BN8S0+ */
+	{ 0x1397, 0x08b4, 0x1397, 0xb559, 0, 0, (unsigned long)&JUNGHANNS_DUO_MINI },   /* Junghanns.NET duoBRI miniPCI */
+	{ 0x1397, 0x08b4, 0x1397, 0xb558, 0, 0, (unsigned long)&JUNGHANNS_QUAD_MINI },  /* Junghanns.NET quadBRI miniPCI */
+	{ 0x1397, 0x08b4, 0x1397, 0xb550, 0, 0, (unsigned long)&JUNGHANNS_QUAD_PCI2 },  /* Junghanns.NET quadBRI 2.0 PCI */
+	{ 0x1397, 0x16b8, 0x1397, 0xb55b, 0, 0, (unsigned long)&JUNGHANNS_OCTO_PCI },   /* Junghanns.NET octoBRI PCI */
+	{ 0x1397, 0x08b4, 0x1397, 0xb540, 0, 0, (unsigned long)&SWYX_QUAD },            /* Swyx 4xS0 SX2 QuadBRI */
+	{ 0x1397, 0x08b4, 0x1397, 0xb620, 0, 0, (unsigned long)&GENERIC_HFC4S_1 },      /* HFC-4S */
+	{ 0x1397, 0x16b8, 0x1397, 0xb521, 0, 0, (unsigned long)&GENERIC_HFC8S_1 },      /* HFC-8S IOB4ST Recording */
+	{ 0x1397, 0x16b8, 0x1397, 0xb522, 0, 0, (unsigned long)&GENERIC_HFC8S_2 },      /* HFC-8S IOB8ST */
+	{ 0x1397, 0x16b8, 0x1397, 0xb552, 0, 0, (unsigned long)&GENERIC_HFC8S_3 },      /* HFC-8S */
+	{ 0x1397, 0x16b8, 0x1397, 0xb622, 0, 0, (unsigned long)&GENERIC_HFC8S_4 },      /* HFC-8S */
 	{0, }
 
 };
