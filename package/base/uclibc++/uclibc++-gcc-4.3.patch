diff -ru uClibc++-0.2.2.orig/include/associative_base uClibc++-0.2.2/include/associative_base
--- uClibc++-0.2.2.orig/include/associative_base	2009-03-03 14:03:40.000000000 +0000
+++ uClibc++-0.2.2/include/associative_base	2009-03-03 14:03:52.000000000 +0000
@@ -318,7 +318,7 @@
 	typedef std::list<ValueType> listtype;
 
 	typename listtype::iterator base_iter;
-	typedef _associative_citer<ValueType, Compare, Allocator> _associative_citer;
+	typedef _associative_citer<ValueType, Compare, Allocator> __associative_citer;
 
 	
 public:
@@ -347,13 +347,13 @@
 	bool operator==(const _associative_iter & m) const{
 		return m.base_iter == base_iter;
 	}
-	bool operator==(const _associative_citer & m) const{
+	bool operator==(const __associative_citer & m) const{
 		return m.base_iter == base_iter;
 	}
 	bool operator!=(const _associative_iter & m) const{
 		return m.base_iter != base_iter;
 	}
-	bool operator!=(const _associative_citer & m) const{
+	bool operator!=(const __associative_citer & m) const{
 		return m.base_iter != base_iter;
 	}
 	_associative_iter & operator++(){
@@ -378,8 +378,8 @@
 		--base_iter;
 		return temp;
 	}
-	operator _associative_citer() const{
-		return _associative_citer(base_iter);
+	operator __associative_citer() const{
+		return __associative_citer(base_iter);
 	}
 	typename listtype::iterator base_iterator(){
 		return base_iter;
diff -ru uClibc++-0.2.2.orig/include/string uClibc++-0.2.2/include/string
--- uClibc++-0.2.2.orig/include/string	2009-03-03 14:03:40.000000000 +0000
+++ uClibc++-0.2.2/include/string	2009-03-03 14:03:52.000000000 +0000
@@ -1017,11 +1017,11 @@
 
 template <> _UCXXEXPORT bool operator==(const string & lhs, const string & rhs);
 template <> _UCXXEXPORT bool operator==(const char * lhs, const string & rhs);
-template <> _UCXXEXPORT bool operator==(const string & rhs, const char * rhs);
+template <> _UCXXEXPORT bool operator==(const string & lhs, const char * rhs);
 
 template <> _UCXXEXPORT bool operator!=(const string & lhs, const string & rhs);
 template <> _UCXXEXPORT bool operator!=(const char * lhs, const string & rhs);
-template <> _UCXXEXPORT bool operator!=(const string & rhs, const char * rhs);
+template <> _UCXXEXPORT bool operator!=(const string & lhs, const char * rhs);
 
 template <> _UCXXEXPORT string operator+(const string & lhs, const char* rhs);
 template <> _UCXXEXPORT string operator+(const char* lhs, const string & rhs);
diff -ru uClibc++-0.2.2.orig/src/string.cpp uClibc++-0.2.2/src/string.cpp
--- uClibc++-0.2.2.orig/src/string.cpp	2009-03-03 14:03:41.000000000 +0000
+++ uClibc++-0.2.2/src/string.cpp	2009-03-03 14:03:52.000000000 +0000
@@ -76,11 +76,11 @@
 
 	template _UCXXEXPORT bool operator==(const string & lhs, const string & rhs);
 	template _UCXXEXPORT bool operator==(const char * lhs, const string & rhs);
-	template _UCXXEXPORT bool operator==(const string & rhs, const char * rhs);
+	template _UCXXEXPORT bool operator==(const string & lhs, const char * rhs);
 
 	template _UCXXEXPORT bool operator!=(const string & lhs, const string & rhs);
 	template _UCXXEXPORT bool operator!=(const char * lhs, const string & rhs);
-	template _UCXXEXPORT bool operator!=(const string & rhs, const char * rhs);
+	template _UCXXEXPORT bool operator!=(const string & lhs, const char * rhs);
 
 	template _UCXXEXPORT string operator+(const string & lhs, const char* rhs);
 	template _UCXXEXPORT string operator+(const char* lhs, const string & rhs);
