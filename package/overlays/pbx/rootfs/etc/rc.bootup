#!/usr/bin/php -f
<?php
/*
	$Id$
	part of m0n0wall (http://m0n0.ch/wall)
	
	Copyright (C) 2003-2006 Manuel Kasper <mk@neon1.net>.
	All rights reserved.
	
	Redistribution and use in source and binary forms, with or without
	modification, are permitted provided that the following conditions are met:
	
	1. Redistributions of source code must retain the above copyright notice,
	   this list of conditions and the following disclaimer.
	
	2. Redistributions in binary form must reproduce the above copyright
	   notice, this list of conditions and the following disclaimer in the
	   documentation and/or other materials provided with the distribution.
	
	THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
	AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
	AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
	OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
	SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
	INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
	CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	POSSIBILITY OF SUCH DAMAGE.
*/

	require_once("globals.inc");

	/* let the other functions know we're booting */
	$g['booting'] = TRUE;
	touch("{$g['varrun_path']}/booting");

	/* parse the configuration and include all functions used below */
	require_once("config.inc");
	require_once("functions.inc");

	/* check whether config reset is desired (via hardware button on wrap and alix23x) */
	echo " - Checking reset button... ";
	system_check_reset_button();
	echo "done\n";

	/* convert configuration, if necessary */
	echo " - Converting configuration... ";
	convert_config();
	echo "done\n";

	/* load kernel modules */
	echo " - Loading kernel modules... ";
	system_load_kernel_modules();
	echo "done\n";

	/* detect storage partition, initialize if not present, reinit bsdlabel if overwritten */
	echo " - Initializing storage partition... ";
	storage_syspart_initialize();
	echo "done\n";

	/* setup the temporary file upload destination */
	echo " - Setting up ultmp... ";
	system_setup_ultmp();
	echo "done\n";

	/* run any early shell commands specified in config.xml */
	echo " - Running early shell commands... ";
	system_do_shell_commands(1);
	echo "done\n";

	/* execute package boot routines */
	echo " - Booting all packages... ";
	packages_boot_all();
	echo "done\n";

	/* start syslogd */
	echo " - Starting syslogd... ";
	system_syslogd_start();
	echo "done\n";

	/* set up our timezone */
	echo " - Configuring timezone... ";
	system_timezone_configure();
	echo "done\n";

	/* set up our hostname */
	echo " - Configuring hostname... ";
	system_hostname_configure();
	echo "done\n";

	/* make hosts file */
	echo " - Generating hosts... ";
	system_hosts_generate();
	echo "done\n";

	/* generate resolv.conf */
	echo " - Generating resolv.conf... ";
	system_resolvconf_generate();
	echo "done\n";

	/* configure wireless interface */
	echo " - Configuring wireless... ";
	wireless_configure();
	echo "done\n";

	/* configure loopback interface */
	echo " - Configuring network loopback interface... ";
	network_loopback_configure();
	echo "done\n";

	/* set up LAN interface */
	echo " - Configuring LAN interface... ";
	network_lan_configure();
	echo "done\n";

	/* set up static routes */
	echo " - Configuring routing... ";
	system_routing_configure();
	echo "done\n";

	/* enable routing */
	echo " - Enabling routing... ";
	system_routing_enable();
	echo "done\n";

	/* generate machine specific ssl certificate */
	//echo " - Upgrading https certificate... ";
	//system_upgrade_https_certificate();
	//echo "done\n";

	/* start web server */
	echo " - Starting webgui... ";
	system_httpd_start();
	echo "done\n";

	/* configure console menu */
	echo " - Configuring console menu... ";
	system_console_configure();
	echo "done\n";

	/* start dyndns service */
	echo " - Configuring dyndns... ";
	services_dyndns_configure();
	echo "done\n";

	/* static IP address? -> attempt DNS update *//*
	if ($config['interfaces']['lan']['topology'] == "public" ||
		$config['interfaces']['lan']['topology'] == "natstatic")
		services_dnsupdate_process();*/

	/* start the NTP client */
	//echo " - Configuring ntp client... ";
	//system_ntp_configure();
	//echo "done\n";

	/* start up asterisk */
	echo " - Starting Asterisk... ";
	pbx_configure();
	echo "done\n";

	/* run any shell commands specified in config.xml */
	echo " - Running shell commands... ";
	system_do_shell_commands();
	echo "done\n";

	/* enable HD standby */
	echo " - Enabling hdd standby... ";
	system_set_harddisk_standby();
	echo "done\n";

	/* done */
	unlink("{$g['varrun_path']}/booting");
?>
