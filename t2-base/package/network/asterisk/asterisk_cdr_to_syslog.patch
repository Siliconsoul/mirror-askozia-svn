diff -ur include/asterisk/logger.h.orig include/asterisk/logger.h
--- include/asterisk/logger.h.orig	2006-09-28 20:05:43.000000000 +0200
+++ include/asterisk/logger.h	2007-04-17 16:04:22.000000000 +0200
@@ -129,6 +129,12 @@
 #define __LOG_DTMF  6
 #define LOG_DTMF    __LOG_DTMF, _A_
 
+#ifdef LOG_CDR
+#undef LOG_CDR
+#endif
+#define __LOG_CDR  7
+#define LOG_CDR    __LOG_CDR, _A_
+
 #if defined(__cplusplus) || defined(c_plusplus)
 }
 #endif
--- main/logger.c.orig	2008-11-29 17:58:29.000000000 +0100
+++ main/logger.c	2009-02-23 13:46:49.000000000 +0100
@@ -54,7 +54,8 @@
 	LOG_WARNING,
 	LOG_ERR,
 	LOG_DEBUG,
-	LOG_DEBUG
+	LOG_DEBUG,
+	LOG_INFO
 };
 
 #define SYSLOG_NLEVELS sizeof(syslog_level_map) / sizeof(int)
@@ -121,7 +122,8 @@
 	"WARNING",
 	"ERROR",
 	"VERBOSE",
-	"DTMF"
+	"DTMF",
+	"CDR"
 };
 
 static int colors[] = {
@@ -162,6 +164,8 @@
 			res |= (1 << __LOG_VERBOSE);
 		else if (!strcasecmp(w, "dtmf"))
 			res |= (1 << __LOG_DTMF);
+		else if (!strcasecmp(w, "cdr"))
+			res |= (1 << __LOG_CDR);
 		else {
 			fprintf(stderr, "Logfile Warning: Unknown keyword '%s' at line %d of logger.conf\n", w, lineno);
 		}
@@ -538,6 +542,8 @@
 			ast_cli(fd, "Error ");
 		if (chan->logmask & (1 << __LOG_EVENT)) 
 			ast_cli(fd, "Event ");
+		if (chan->logmask & (1 << __LOG_CDR)) 
+			ast_cli(fd, "CDR ");
 		ast_cli(fd, "\n");
 	}
 	AST_LIST_UNLOCK(&logchannels);
@@ -655,7 +661,7 @@
 	return;
 }
 
-static void __attribute__((format(printf, 5, 0))) ast_log_vsyslog(int level, const char *file, int line, const char *function, const char *fmt, va_list args) 
+static void __attribute__((format(printf, 5, 0))) ast_log_vsyslog(int level, int facility, const char *file, int line, const char *function, const char *fmt, va_list args) 
 {
 	char buf[BUFSIZ];
 	char *s;
@@ -671,6 +677,9 @@
 	} else if (level == __LOG_DTMF) {
 		snprintf(buf, sizeof(buf), "DTMF[%ld]: ", (long)GETTID());
 		level = __LOG_DEBUG;
+	} else if (level == __LOG_CDR) {
+		snprintf(buf, sizeof(buf), "CDR[%ld]: ", (long)GETTID());
+		level = __LOG_CDR;
 	} else {
 		snprintf(buf, sizeof(buf), "%s[%ld]: %s:%d in %s: ",
 			 levels[level], (long)GETTID(), file, line, function);
@@ -678,7 +687,7 @@
 	s = buf + strlen(buf);
 	vsnprintf(s, sizeof(buf) - strlen(buf), fmt, args);
 	term_strip(s, s, strlen(s) + 1);
-	syslog(syslog_level_map[level], "%s", buf);
+	syslog(syslog_level_map[level] | facility, "%s", buf);
 }
 
 /*!
@@ -757,7 +766,7 @@
 		/* Check syslog channels */
 		if (chan->type == LOGTYPE_SYSLOG && (chan->logmask & (1 << level))) {
 			va_start(ap, fmt);
-			ast_log_vsyslog(level, file, line, function, fmt, ap);
+			ast_log_vsyslog(level, chan->facility, file, line, function, fmt, ap);
 			va_end(ap);
 		/* Console channels */
 		} else if ((chan->logmask & (1 << level)) && (chan->type == LOGTYPE_CONSOLE)) {
