pb8

new features
 - followme
 - add iax2 auth options
   - pubkey import
   - md5
 - iax jitter buffer options, notes at bottom!!!
 - ISDN
   - dialing failures need debugging
 - multilanguage e-mail greetings!!!
 - "Status -> Interfaces" needs to display ISDN interface information!!!

fixes
 - is_valid_xxx checks need to be completed!!!
 - use posted config in dialplan providers instead of making users start all over
 - extension_exists() really needs to work

improvements
 - dialplan (still needs (de)select all)
 - improve module population in pbxdev
 - figure out DID!!!
 - start returning get_blahs() functions by reference
 _ also, get_blahs() should return arrays with uniqid's as the keys
 - kernel and asterisk modules should only be loaded when needed
 - ISDN interfaces for providers and phones should be limited to appropriate choices (NT vs TE)

pb9
 - storage interface (add storage partition for extended capabilities)
 - extended capabilities hooks into the gui
 - new option to log to storage partition
 - privacy with voicemail forward

Docs:
 - presentation
 - website
 - user documentation

- get "advanced mode" working
- provider to provider access with pin code
- QoS options, such as jitterbuffer and packet types supported
- dialplan as a movable grid
- testing / performance mode
- get indications.conf working
- figure out config xml single var irregularities (empty defines showing up)
- url given in console menu should match port given in gui (m0n0wall bug)



; --[ jitter buffer ]-------------------------------------------------------------
; All the jitter buffer settings are in milliseconds.
; The jitter buffer works for INCOMING audio - the outbound audio
; will be dejittered by the jitter buffer at the other end.
;
; maxjitterbuffer: a maximum size for the jitter buffer.
; Setting a reasonable maximum here will prevent the call delay
; from rising to silly values in extreme situations; you'll hear
; SOMETHING, even though it will be jittery.
;
; resyncthreshold: when the jitterbuffer notices a significant change in delay
; that continues over a few frames, it will resync, assuming that the change in
; delay was caused by a timestamping mix-up. The threshold for noticing a
; change in delay is measured as twice the measured jitter plus this resync
; threshold.
; Resyncing can be disabled by setting this parameter to -1.
;
; maxjitterinterps: the maximum number of interpolation frames the jitterbuffer
; should return in a row. Since some clients do not send CNG/DTX frames to
; indicate silence, the jitterbuffer will assume silence has begun after
; returning this many interpolations. This prevents interpolating throughout
; a long silence.
;

;maxjitterbuffer=1000
;maxjitterinterps=10
;resyncthreshold=1000



; --[ features ]-------------------------------------------------------------

[general]
;parkingtime => 45		; Number of seconds a call can be parked for 
				; (default is 45 seconds)
;courtesytone = beep		; Sound file to play to the parked caller 
				; when someone dials a parked call
				; or the Touch Monitor is activated/deactivated.
;parkedplay = caller		; Who to play the courtesy tone to when picking up a parked call
				; one of: parked, caller, both  (default is caller)
;adsipark = yes			; if you want ADSI parking announcements
;findslot => next		; Continue to the 'next' free parking space. 
				; Defaults to 'first' available
;parkedmusicclass=default	; This is the MOH class to use for the parked channel
				; as long as the class is not set on the channel directly
				; using Set(CHANNEL(musicclass)=whatever) in the dialplan

;transferdigittimeout => 3	; Number of seconds to wait between digits when transferring a call
				; (default is 3 seconds)
;xfersound = beep		; to indicate an attended transfer is complete
;xferfailsound = beeperr	; to indicate a failed transfer
;pickupexten = *8		; Configure the pickup extension. (default is *8)
;featuredigittimeout = 500	; Max time (ms) between digits for 
				; feature activation  (default is 500 ms)
;atxfernoanswertimeout = 15	; Timeout for answer on attended transfer default is 15 seconds.

[featuremap]
;blindxfer => #1		; Blind transfer  (default is #)
;disconnect => *0		; Disconnect  (default is *)
;automon => *1			; One Touch Record a.k.a. Touch Monitor
;atxfer => *2			; Attended transfer
;parkcall => #72                ; Park call (one step parking)

[applicationmap]
; Note that the DYNAMIC_FEATURES channel variable must be set to use the features
; defined here.  The value of DYNAMIC_FEATURES should be the names of the features
; to allow the channel to use separated by '#'.  For example:
;
;    Set(DYNAMIC_FEATURES=myfeature1#myfeature2#myfeature3)
;
;
; The syntax for declaring a dynamic feature is the following:
;
;<FeatureName> => <DTMF_sequence>,<ActivateOn>[/<ActivatedBy>],<Application>[,<AppArguments>[,MOH_Class]]
;
;  FeatureName   -> This is the name of the feature used in when setting the
;                   DYNAMIC_FEATURES variable to enable usage of this feature.
;  DTMF_sequence -> This is the key sequence used to activate this feature.
;  ActivateOn    -> This is the channel of the call that the application will be executed
;                   on. Valid values are "self" and "peer". "self" means run the
;                   application on the same channel that activated the feature. "peer"
;                   means run the application on the opposite channel from the one that
;                   has activated the feature.
;  ActivatedBy   -> This is which channel is allowed to activate this feature. Valid
;                   values are "caller", "callee", and "both". "both" is the default.
;                   The "caller" is the channel that executed the Dial application, while
;                   the "callee" is the channel called by the Dial application.
;  Application   -> This is the application to execute.
;  AppArguments  -> These are the arguments to be passed into the application.
;  MOH_Class     -> This is the music on hold class to play while the idle
;                   channel waits for the feature to complete. If left blank,
;                   no music will be played.
;
;
; IMPORTANT NOTE: The applicationmap is not intended to be used for all Asterisk
;   applications. When applications are used in extensions.conf, they are executed
;   by the PBX core. In this case, these applications are executed outside of the
;   PBX core, so it does *not* make sense to use any application which has any
;   concept of dialplan flow. Examples of this would be things like Macro, Goto,
;   Background, WaitExten, and many more.
;
; Enabling these features means that the PBX needs to stay in the media flow and
; media will not be re-directed if DTMF is sent in the media stream.
;
; Example Usage:
;
;testfeature => #9,peer,Playback,tt-monkeys  ;Allow both the caller and callee to play
;                                            ;tt-monkeys to the opposite channel
;
;pauseMonitor   => #1,self/callee,Pausemonitor     ;Allow the callee to pause monitoring
;                                                  ;on their channel
;unpauseMonitor => #3,self/callee,UnPauseMonitor   ;Allow the callee to unpause monitoring
;                                                  ;on their channel
;
